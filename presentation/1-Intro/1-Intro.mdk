[INCLUDE=presentation]
Title         : Introduction to AI
Sub Title     : 1- Basic concepts
Author        : Jaya Nilakantan
Affiliation   : Dawson College
Email         : jnilakantan@dawsoncollege.qc.ca
Reveal Theme  : night
Beamer Theme  : singapore

[TITLE]

# What is AI?

Some definitions from Morgan Stanley conference: The Power of Artificial Intelligence to
 Transform Business and Society

# What is AI?

* computer program that takes information from the world
* manipulates the data, distills knowledge,
* uses the knowledge to make decisions or predictions

# What is AI?

* making machines understand the world without explicitly programming for every eventuality

# What is Artificial General Inteeligence
* quest to understand the general principles and core capabilities of intelligence

# What is AI?
From Russell and Norvig:
* Artificial intelligence is the study and design of intelligence agents
where an intelligent agent is a system that perceives it's environment and
takes actions that maximizes its chances of success.

# AI vs Machine Learning vs Deep Learning
![nvidia]

[nvidia]: images/nvidia.jpg "AIvsMLvsDL, nvidia blog, Michael Copeland" { width:100%; }

# Timeline
![Deep_Learning]

[Deep_Learning]: images/Deep_Learning.png "AIvsMLvsDL, nvidia blog, Michael Copeland" { width:auto; max-width:90% }

# 3 Main Types of Machine Learning
* Supervised learning: give lots of data, find model that allows you to generalize
the data and predict or classify a new piece of data never seen before
 - input data has many parameters (features) and the answer (label)
 - Mathematical models to extrapolate from this data (e.g., line of best fit or linear regression,
 k-nearest-neighbours)

* Unsupervised learning: give lots of data, try to similarities in data
 - input data is not labelled, trying to find classifications/clusters/similarities based on the features
 
* Reinforcement learning: give the algorithm rewards if it wins, let it try by trial and error and learn from its mistakes

# Supervised vs Unsupervised vs Reinforcement
![mod1_SuperUnsuper]
![reinf]

[reinf]: images/reinf.png "reinf" { width:auto; max-width:50% }

[mod1_SuperUnsuper]: images/mod1_SuperUnsuper.png "mod1_SuperUnsuper" { width:auto; max-width:60%; }
Source: http://beta.cambridgespark.com/courses/jpm/01-module.html
Source: http://enhancedatascience.com/2017/07/19/machine-learning-explained-supervised-learning-unsupervised-learning-and-reinforcement-learning/

# Quiz: Supervised or Unsupervised or Reinforcement?
Facial recognition

![mod1_faces]

[mod1_faces]: images/mod1_faces.png "mod1_faces" { width:auto; max-width:90%; align:center }
Source: http://beta.cambridgespark.com/courses/jpm/01-module.html

# Quiz: Supervised or Unsupervised or Reinforcement?
Classification of tissue samples

![mod1_bc]

[mod1_bc]: images/mod1_bc.jpg "mod1_bc" { width:auto; max-width:90% }
Source: http://beta.cambridgespark.com/courses/jpm/01-module.html

# Quiz: Supervised or Unsupervised or Reinforcement?
Market segmentation

![segmentation]

[segmentation]: images/segmentation.png "segmentation" { width:auto; max-width:90% }
https://c.ymcdn.com/sites/dema.site-ym.com/resource/resmgr/Member_Resources/Lifestage_Clustering.pdf

# Quiz: Supervised or Unsupervised or Reinforcement?
AlphaGo
![alphago2]

[alphago2]: images/alphago2.png "alphago2" { width:auto; max-width:90% }

Source: https://www.popularmechanics.com/technology/a19863/googles-alphago-ai-wins-second-game-go/

# Why is AI everywhere?

* lots of data
* lots of compute
* developments and breakthroughs in algorithms and research

# Example application
How about an application that alerts the public to high crime areas?

* Montreal releases [data] about crimes and where the occur (the the nearest intersection)
* there are already [visualization] apps
* wouldn't it be in the public interest to provide a map that warns people if they enter a high crime area?

[data]: https://ville.montreal.qc.ca/vuesurlasecuritepublique/
[visualization]: https://newsinteractives.cbc.ca/montreal-crime/ 

# What could possibly go wrong?

ML is based on past data. What are some problems with using past data for predictive apps?

* any biases in the data will cause biased results
* always ask yourself: is my data correct and representative?
  + is the sample of data on which is train my models really representative?
  + is there inherent bias in my data?
  
Most importantly *can the bias cause harm?*

# Example - Amazon 

For example:
Using [Madoko] it is easy to create beautiful presentations.

* [Html][slide]:
  Uses the `Reveal.js` library by [Hakim El Hattab](http://hakim.se).\
  This slide demo in Madoko is an adaption of his online demo.
* [Pdf][slide-pdf]:
  Uses the `Beamer` package for LaTeX
* [Source][slide-mdk]:
  Click to see the source of this presentation.


[madoko]: http://madoko.codeplex.com

## Reveal.js

`reveal.js` is a framework for easily creating beautiful presentations using
HTML. You'll need a browser with support for CSS 3D transforms to see it in
its full glory. 

And any Madoko features just work. Here is some math:

~ Begin Framed { padding:1ex; margin-top:1ex }
A famous equation is $e = mc^2$, but this one is 
famous too:

~ Equation  {#eq-gaussian}
\int_{-\infty}^\infty e^{-a x^2} d x = \sqrt{\frac{\pi}{a}} 
~
~ End Framed

~~ Notes
Oh hey, these are some notes. They'll be hidden in your presentation, but you
can see them if you open the speaker notes window (hit 's' on your keyboard).
~~

## Code

Here is code, highlighted by Madoko 

``` javascript
function sqr( x ) {
  var \(&pi;\) = 3.141593;
  return x*x;  /* the square */
}
```
We used `\(` and `\)` to escape into markdown to write &pi;.

<!-- Example of nested vertical slides -->
~ Begin Vertical { data-background:Gainsboro }

## Vertical Slides {#vertical}
Slides can be nested inside of other slides,
try pressing [down].

[![arrowdown]][down]


[down]: # { .navigate-down }
[arrowdown]: images/arrow.png "Down arrow" { width:178px; height:238px }

## Basement Level 1
Press down or up to navigate.

## Basement Level 2

Use `columns` to put blocks next to each other:

~ Begin Columns
~ Column { width:50% }
A monarch butterfly (shown to the right)
spends the winter in Mexico.
~
~ Column
![butterfly]
~
~ End Columns

[butterfly]: images/butterfly.png "A Monarch butterfly" { width:280px; vertical-align:middle }


<!-- 
For local background images, we need to have a reference to the image
such that it's data gets embedded into the HTML page. We define
it using "display=none" so it is hidden in the presentation. 
We can then refer to the image in "data-background-image". 
-->

![bfly]
[bfly]: images/butterfly.png "Butterfly" { display:none }

## Basement Level 3 { data-background-image:images/butterfly.png }
That's it, time to go back up.

[![arrowup]][back2]

[arrowup]:  images/arrow.png "Up arrow" { width:178px; height:238px; transform:rotate(180deg) }
[back2]:    #vertical { .image }

~ End Vertical


## Themes {#themes}

Reveal.js comes with a few themes built in:

* [Default](?#/themes)
* [Sky](?theme=sky#/themes)
* [Beige](?theme=beige#/themes)
* [Serif](?theme=serif#/themes)
* [Simple](?theme=simple#/themes)
* [Night](?theme=night#/themes)
* [Moon](?theme=moon#/themes)
* [Solarized](?theme=solarized#/themes)

Theme demos are loaded after the presentation which leads to flicker. In
production you should load your theme in the `<head>` using a
`<link>`.

## Transitions { #transitions }

You can select from different transitions, like:\
[Cube](?transition=cube#/transitions) -
[Page](?transition=page#/transitions) -
[Concave](?transition=concave#/transitions) -
[Zoom](?transition=zoom#/transitions) -
[Linear](?transition=linear#/transitions) -
[Fade](?transition=fade#/transitions) -
[None](?transition=none#/transitions) -
[Default](?#/transitions)



## Pauses?

Some pauses.

* {.fragment} One
* {.fragment} Two
* {.fragment} Three

And more:

- Test 1
- Test 2
- Test 3
{.fragmented}

Cool!.

~ Slide
A slide with no header
~


## Point of View

In Reveal.js Press **ESC** to enter the slide overview.

Hold down alt and click on any element to zoom in on it using 
 [zoom.js]. Alt + click anywhere to zoom back out.


[zoom.js]: http://lab.hakim.se/zoom-js


## Works in Mobile Safari

Try it out! You can swipe through the slides and pinch your way to the
overview.


## Printing

You can print a `revealjs` presentation nicely from the browser.

First give the `?print-pdf` or `?print-paper` query on your final
presentation (in the browser address bar) and then print from the Chrome
browser selecting `Save to PDF`.

Read more about it at the [revealjs documentation](https://github.com/hakimel/reveal.js#pdf-export)

## RevealJS library

Normally, the `revealjs` library is loaded from a CDN but you can specify your
own url using metadata:

    Reveal Url: <my url>

This can be useful when using a [server to run revealjs](https://github.com/hakimel/reveal.js#full-setup)
where you may use something like:

    @nopreview Reveal Url: http://localhost:8000/reveal.js


## Thanks for looking :-)

[slide]: http://research.microsoft.com/en-us/um/people/daan/madoko/samples/slidedemo/out/slidedemo.html
[slide-mdk]: https://www.madoko.net/editor.html?#url=http://research.microsoft.com/en-us/um/people/daan/madoko/samples/slidedemo/slidedemo.mdk&options={"delayedUpdate":"true"}
[slide-pdf]: http://research.microsoft.com/en-us/um/people/daan/madoko/samples/slidedemo/out/slidedemo.pdf
